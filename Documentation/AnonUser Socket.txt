
mobile ------------------------------------- 1 to many

list of lobbies
list of sockets per lobby
list of people in said lobby

when a new people joins the lobby
send to everyone in that lobby except the sender that they have joined.

http://stackoverflow.com/questions/10058226/send-response-to-all-clients-except-sender-socket-io
http://stackoverflow.com/questions/7352164/update-all-clients-using-socket-io

web ---------------------------------------- 1 to 1

lobby
list of people in said lobby
weather they are ready or not

when someone joins a lobby it sends the data to the web
web takes it and updates the ui with their name (either email or nickname)

http://socket.io/docs/
http://stackoverflow.com/questions/11805130/socket-io-how-to-send-javascript-object

Three types of message
ng repeat on frontend

When a person logs into a lobby
great database for anonuser
while in api send data to uiupdatelobbyuser
this creates a json object with info
and sends over socket.io
at front end it adds/del/updates ui with infomation

On Frontend I will ng repeat to update a table.

Server -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

//Parse string to add to object
//need to do this on the incoming data from newUser


var obj = JSON.parse(text);

var anonUsers = [
    {
        'id': '0',
        'data': {'email': ''
                 'nickname': '',
                 'ready': '',}
    },
    {
        'id': '1',
        'data': {'email': ''
                 'nickname': '',
                 'ready': '',}
    }
];

anonUser[i].data.email //to get the id of something

//database

var anonUser = {'id':'INCOMINGID', 'data': {'email': 'INCOMINGEMAIL',
                                            'nickname': 'INCOMINGNICKNAME',
                                            'ready': 'INCOMINGBOOLEAN'}};
anonUsers.push(anonUser);

socket.emit('newAnonUser', anonUsers);


Client =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

socket.on('newAnonUser', function (data) {
    //do something with the data
  });



















